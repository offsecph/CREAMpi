---
# Load data from config.json
- import_playbook: ../vars/data.yml

# Configure iptables stateful firewall
- name: Command and Control Configuration
  hosts: creampi
  gather_facts: no
  tags: 'netfilter_service'
  become: true
  vars:
    remote_script_path: "{{ services.netfilter.script.remotePath }}"
    local_script_path: "{{ services.netfilter.script.localPath }}"
    iptables_script: "{{ services.netfilter.script.iptables }}"
    remote_service_path: "{{ services.netfilter.service.remotePath }}"
    local_service_path: "{{ services.netfilter.service.localPath }}"
    iptables_service: "{{ services.netfilter.service.iptables }}"
    remote_conf_path: "{{ services.netfilter.conf.remotePath }}"
    local_conf_path: "{{ services.netfilter.conf.localPath }}"
    iptables_rules: "{{ services.netfilter.conf.rules }}"
    
  tasks:
  - name: Ensure iptables is installed on {{ hostname }}
    ansible.builtin.apt:
      name: iptables
      state: latest
    register: iptables_install

  - name: Ensure iptables-persistent is installed on {{ hostname }}
    ansible.builtin.apt:
      name: iptables-persistent
      state: latest
    register: iptables_persistent_install

  - name: Copying iptables script 
    ansible.builtin.copy:
      remote_src: false
      src: "{{ local_script_path }}/{{ iptables_script }}"
      dest: "{{ remote_script_path }}/{{ iptables_script }}"
      owner: root
      group: root
      mode: '0700'
      force: true

  - name: Copying iptables persistence service
    ansible.builtin.copy:
      remote_src: false
      src: "{{ local_service_path }}/{{ iptables_service }}"
      dest: "{{ remote_service_path }}/{{ iptables_service }}"
      owner: root
      group: root
      mode: '0644'
      force: true

  - name: Copying stateful firewall rules
    ansible.builtin.copy:
      remote_src: false
      src: "{{ local_conf_path }}/{{ iptables_rules }}"
      dest: "{{ remote_conf_path }}/{{ iptables_rules }}"
      owner: root
      group: root
      mode: '0644'
      force: true

  - name: Validating iptables-netfilter service
    ansible.builtin.service:
      name: "{{ iptables_service }}"
      state: stopped
      enabled: true

  handlers:
    - name: Execute iptables service on changes
      ansible.builtin.service:
        name: "{{ iptables_service }}"
        state: restarted