---
# Load data from config.json
- import_playbook: ../vars/data.yml

- hosts: creampi
  gather_facts: false
  tags: 'scanner_modules'
  become: true
  vars:
    exe_path: "{{ tools.scanner.path.executable }}"
    scanner_path: "{{ tools.scanner.path.scanner }}"
    aquatone_release: "{{ tools.scanner.releases.aquatone }}"
    gowitness_release: "{{ tools.scanner.releases.gowitness }}"
    nuclei_release: "{{ tools.scanner.releases.nuclei }}"
    httpx_release: "{{ tools.scanner.releases.httpx }}"
    katana_release: "{{ tools.scanner.releases.katana }}"
    nuclei_templates_git: "{{ tools.scanner.git.nucleiTemplates }}"

  tasks:
  - name: Create a directory for scanner tools on {{ hostname }}
    ansible.builtin.file:
      path: "{{ scanner_path }}"
      owner: root
      group: root
      mode: '0755'
      state: directory

  - name: Download aquatone screenshot tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl -s {{ aquatone_release }} \
        | grep "browser_download_url.*_linux_arm64_*.*.*zip" \
        | head -n1 | cut -d: -f2,3 | tr -d "\"" | wget -qi - -P {{ scanner_path }}
      creates: "{{ scanner_path }}/aquatone"

  - name: Unpack aquatone screenshot tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        unzip {{ scanner_path }}/aquatone_linux_arm64_*.*.*.zip -d {{ scanner_path }} \
        && rm -rf {{ scanner_path }}/aquatone_linux_arm64_*.*.*.zip {{ scanner_path }}/*.txt \
        {{ scanner_path }}/*.md
      creates: "{{ scanner_path }}/aquatone"

  - name: Download gowitness screenshot tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl -s {{ gowitness_release }} \
        | grep "browser_download_url.*gowitness-*.*.*-linux-arm64" \
        | head -n1 | cut -d: -f2,3 | tr -d "\"" | wget -qi - -P {{ scanner_path }}
      creates: "{{ scanner_path }}/gowitness"

  - name: Rename and set executable for gowitness screenshot tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        mv {{ scanner_path }}/gowitness-*.*.*-linux-arm64 {{ scanner_path }}/gowitness \
        && chmod 0751 {{ scanner_path }}/gowitness
      creates: "{{ scanner_path }}/gowitness"

  - name: Download nuclei scanner tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl -s {{ nuclei_release }} \
        | grep "browser_download_url.*_linux_arm64.zip" \
        | head -n1 | cut -d: -f2,3 | tr -d "\"" | wget -qi - -P {{ scanner_path }}
      creates: "{{ scanner_path }}/nuclei"

  - name: Unpack nuclei scanner tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        unzip {{ scanner_path }}/nuclei_*.*.*_linux_arm64.zip -d {{ scanner_path }} \
        && rm -rf {{ scanner_path }}/nuclei_*.*.*_linux_arm64.zip {{ scanner_path }}/*.txt \
        {{ scanner_path }}/*.md
      creates: "{{ scanner_path }}/nuclei"

  - name: Download httpx requests tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl -s {{ httpx_release }} \
        | grep "browser_download_url.*_linux_arm64.zip" \
        | head -n1 | cut -d: -f2,3 | sed s"/\"//"g | wget -qi - -P {{ scanner_path }}
      creates: "{{ scanner_path }}/httpx"

  - name: Unpack httpx requests tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        unzip {{ scanner_path }}/httpx_*.*.*_linux_arm64.zip -d {{ scanner_path }} \
        && rm -rf {{ scanner_path }}/httpx_*.*.*_linux_arm64.zip {{ scanner_path }}/*.md
      creates: "{{ scanner_path }}/httpx"

  - name: Ensure python-httpx package is not installed on {{ hostname }}
    ansible.builtin.apt:
      name: 

  - name: Download katana web crawler tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl -s {{ katana_release }} \
        | grep "browser_download_url.*_linux_arm64.zip" \
        | head -n1 | cut -d: -f2,3 | sed "s/\"//g" | wget -qi - -P {{ scanner_path }}
      creates: "{{ scanner_path }}/katana"

  - name: Unpack katana web crawler tool on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        unzip {{ scanner_path }}/katana_*.*.*_linux_arm64.zip -d {{ scanner_path }} \
        && rm -rf {{ scanner_path }}/katana_*.*.*_linux_arm64.zip {{ scanner_path }}/*.md
      creates: "{{ scanner_path }}/katana"

  - name: Download nuclei templates on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        git clone {{ nuclei_templates_git }} \
        {{ scanner_path }}/nuclei-templates
      creates: "{{ scanner_path }}/nuclei-templates"

  - name: Create a directory for all-templates path on {{ hostname }}
    ansible.builtin.file:
      path: "{{ scanner_path }}/all-templates"
      owner: root
      group: root
      mode: '0755'
      state: directory

  - name: Group all templates for usage on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        find {{ scanner_path }}/nuclei-templates -type f -name *.yaml \
        | xargs -I % cp -f % {{ scanner_path }}/all-templates
      creates: "{{ scanner_path }}/all-templates/*.yaml"

  - name: Create a scanner tools symlink on {{ hostname }}
    ansible.builtin.file:
      src: "{{ scanner_path }}/{{ item.src }}"
      dest: "{{ exe_path }}/{{ item.dest }}"
      state: link
    loop:
      - { src: 'aquatone', dest: 'aquatone' }
      - { src: 'gowitness', dest: 'gowitness' }
      - { src: 'nuclei', dest: 'nuclei' }
      - { src: 'httpx', dest: 'httpx' }
      - { src: 'katana', dest: 'katana' }