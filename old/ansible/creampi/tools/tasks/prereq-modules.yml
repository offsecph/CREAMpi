---
# Load data from config.json
- import_playbook: ../vars/data.yml

- hosts: creampi
  gather_facts: false
  tags: 'prereq_modules'
  become: true
  vars:
    temp_path: "{{ tools.prerequisite.path.temp }}"
    go_path: "{{ tools.prerequisite.path.go }}"
    exe_path: "{{ tools.prerequisite.path.executable }}"
    go_link: "{{ tools.prerequisite.link.go }}"
    rust_link: "{{ tools.prerequisite.link.rust }}"

  tasks:
  - name: Download go lang on {{ hostname }}
    ansible.builtin.shell:
      cmd: | 
        curl -s {{ go_link }}/ | grep go*.**.*.linux-arm64.tar.gz \
        | head -n1 | cut -d"=" -f4 | cut -d">" -f2 \
        | sed -z s"/<\/a//" | xargs -I % echo {{ go_link }}/% \
        | wget -qi - -P {{ temp_path }}
      creates: "{{ go_path }}"

  - name: Unpack go lang and clean on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        tar -C /opt -xzf {{ temp_path }}/go*.**.*.linux-arm64.tar.gz \
        && rm -rf {{ temp_path }}/*.tar.gz
      creates: "{{ go_path }}"

  - name: Create a symlink for go lang on {{ hostname }}
    ansible.builtin.file:
      src: "{{ go_path }}/bin/{{ item.src }}"
      dest: "{{ exe_path }}/{{ item.dest }}"
      state: link
    loop:
      - { src: 'go', dest: 'go' }

  - name: Download rustc and cargo packages on {{ hostname }}
    ansible.builtin.shell:
      cmd: |
        curl --proto "=https" --tlsv1.2 -sSf {{ rust_link }} \
        | sh -s -- -y
      creates: '/root/.cargo'