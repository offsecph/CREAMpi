---
# tasks file for ecrypt
- name: Ensure ecryptfs is installed on {{ hostname }}
  ansible.builtin.apt:
    name: ecryptfs-utils
    state: latest
  register: ecryptfs_result

- name: Ensure scripts directory is present on {{ hostname }}
  ansible.builtin.file:
    path: "{{ remote_script_path }}"
    owner: root
    group: root
    mode: '0755'
    recurse: True
    state: directory

- name: Ensure service is not running {{ hostname }}
  ansible.builtin.service:
    name: "{{ ecryptfs_service }}"
    state: stopped
  ignore_errors: True
  no_log: True

- name: Create a directory for encryption on {{ hostname }}
  ansible.builtin.file:
    path: '/root/Private'
    owner: root
    group: root
    mode: '0700'
    state: directory

- name: Copying ecryptfs script on {{ hostname }}
  ansible.builtin.copy:
    remote_src: False
    src: "{{ local_script_path }}/{{ ecryptfs_script }}"
    dest: "{{ remote_script_path }}/{{ ecryptfs_script }}"
    owner: root
    group: root
    mode: '0700'
    force: True
  register: ecrypt_script
  notify:
    - Restarting service for script file changes

- name: Copying ecryptfs-unmount script on {{ hostname }}
  ansible.builtin.copy:
    remote_src: False
    src: "{{ local_script_path }}/{{ ecryptfs_umount }}"
    dest: "{{ remote_script_path }}/{{ ecryptfs_umount }}"
    owner: root
    group: root
    mode: '0700'
    force: True

- name: Copying ecryptfs persistence service on {{ hostname }}
  ansible.builtin.copy:
    remote_src: False
    src: "{{ local_service_path }}/{{ ecryptfs_service }}"
    dest: "{{ remote_service_path }}/{{ ecryptfs_service }}"
    owner: root
    group: root
    mode: '0644'
    force: True
  register: ecrypt_service

- name: Changing ecryptphrase configuration on {{ hostname }}
  ansible.builtin.shell:
    cmd: |
      data=`echo {{ mount_phrase }} | base64`
      sed -i s"/data=.*/data=\'${data}\'/" \
      {{ remote_script_path }}/{{ ecryptfs_script }}
  register: ecrypt_data
  notify: 
    - Restarting service for script file changes

- name: Ensure to reload systemd daemon for changes on {{ hostname }}
  ansible.builtin.shell:
    cmd: 'systemctl daemon-reload'
  when: ecrypt_service.changed

- name: Starting ecrypt service
  ansible.builtin.service:
    name: "{{ ecryptfs_service }}"
    state: started
    enabled: True